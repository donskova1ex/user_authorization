openapi: 3.0.0
info:
  title: user_authorization service - OpenAPI 3.0
  description: |-
    Сервис авторизации пользователей
  version: 1.0.0
servers:
  - url: https://user-authorization.swagger.io/api/v1
tags:
  - name: users
    description: Everything about users
  - name: persons
    description: Everything about user person
paths:
  /users:
    get:
      tags:
        - users
      summary: Users list
      description: users list
      operationId: usersList
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  - $ref: "#/components/schemas/user"
        '204':
          description: empty list
          content:
            application/json:
              schema:
                type: array
  /users/{uuid}:
    get:
      tags:
        - users
      summary: Find user by uuid
      description: returns a single user
      operationId: getUserByUUID
      parameters:
        - name: uuid
          in: path
          description: uuid of user to return
          required: true
          schema:
            type: string
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/user"
        '400':
          description: user not changed
        '404':
          description: user not found
    put:
      tags:
        - users
      summary: change user by uuid
      description: change a single user
      operationId: changeUserByUUUID
      parameters:
        - name: uuid
          in: path
          description: uuid of changing user
          required: true
          schema:
            type: string
      requestBody:
        description: update user
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/user"
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/user"
        '400':
          description: invalid uuid supplied
        '404':
          description: user not found
    delete:
      tags:
        - users
      summary: delete user by uuid
      description: delete a single user
      operationId: deleteUserByUUUID
      parameters:
        - name: uuid
          in: path
          description: uuid of delete user
          required: true
          schema:
            type: string
      responses:
        '200':
          description: successful operation
        '400':
          description: invalid uuid supplied
        '404':
          description: user not found
  /persons:
    get:
      tags:
        - persons
      summary: Persons list
      description: persons list
      operationId: personsList
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  - $ref: "#/components/schemas/person"
        '204':
          description: empty list
          content:
            application/json:
              schema:
                type: array
  /persons/{uuid}:
    get:
      tags:
        - persons
      summary: Find person by uuid
      description: returns a single person
      operationId: getPersonByUUID
      parameters:
        - name: uuid
          in: path
          description: uuid of person to return
          required: true
          schema:
            type: string
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/person"
        '400':
          description: invalid uuid supplied
        '404':
          description: person not found
    put:
      tags:
        - persons
      summary: change person by uuid
      description: change a single person
      operationId: changePersonByUUUID
      parameters:
        - name: uuid
          in: path
          description: uuid of changing person
          required: true
          schema:
            type: string
      requestBody:
        description: update person
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/person"
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/person"
        '400':
          description: invalid uuid supplied
        '404':
          description: person not found
    delete:
      tags:
        - persons
      summary: delete person by uuid
      description: delete a single person
      operationId: deletePersonByUUUID
      parameters:
        - name: uuid
          in: path
          description: uuid of delete person
          required: true
          schema:
            type: string
      responses:
        '200':
          description: successful operation
        '400':
          description: invalid uuid supplied
        '404':
          description: user not found

components:
  schemas:
    user:
      required:
        - user_name
      type: object
      properties:
        uuid:
          type: string
          example: 123123
        user_name:
          type: string
          example: ivanov.i
    person:
      required:
        - first_name
        - middle_name
        - last_name
        - email
        - address
        - age
        - gender
        - date_of_birth
      type: object
      properties:
        uuid:
          type: string
          example: 123456
        first_name:
          type: string
          example: Ivan
        middle_name:
          type: string
          example: Ivanovich
        last_name:
          type: string
          example: Ivanov
        email:
          type: string
          example: ivanov.i@example.exp
        address:
          type: string
          example: Bashkortostan Republic, c. Ufa, str. Street, h. 21, app. 16
        age:
          type: integer
          example: 25
        gender:
          type: string
          example: male
        date_of_birth:
          type: string
          example: 14.11.1975


