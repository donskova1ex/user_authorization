// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

/*
 * user_authorization service - OpenAPI 3.0
 *
 * Сервис авторизации пользователей
 *
 * API version: 1.0.0
 */

package openapi

import (
	"context"
	"errors"
	"net/http"
)

// PermissionsAPIService is a service that implements the logic for the PermissionsAPIServicer
// This service should implement the business logic for every endpoint for the PermissionsAPI API.
// Include any external packages or services that will be required by this service.
type PermissionsAPIService struct {
}

// NewPermissionsAPIService creates a default api service
func NewPermissionsAPIService() *PermissionsAPIService {
	return &PermissionsAPIService{}
}

// PermissionsList - Permissions list
func (s *PermissionsAPIService) PermissionsList(ctx context.Context) (ImplResponse, error) {
	// TODO - update PermissionsList with the required logic for this service method.
	// Add api_permissions_service.go to the .openapi-generator-ignore to avoid overwriting this service implementation when updating open api generation.

	// TODO: Uncomment the next line to return response Response(200, []Permission{}) or use other options such as http.Ok ...
	// return Response(200, []Permission{}), nil

	// TODO: Uncomment the next line to return response Response(204, {}) or use other options such as http.Ok ...
	// return Response(204, nil),nil

	return Response(http.StatusNotImplemented, nil), errors.New("PermissionsList method not implemented")
}

// GetPermissionByUUID - Find permission by uuid
func (s *PermissionsAPIService) GetPermissionByUUID(ctx context.Context, uuid string) (ImplResponse, error) {
	// TODO - update GetPermissionByUUID with the required logic for this service method.
	// Add api_permissions_service.go to the .openapi-generator-ignore to avoid overwriting this service implementation when updating open api generation.

	// TODO: Uncomment the next line to return response Response(200, Permission{}) or use other options such as http.Ok ...
	// return Response(200, Permission{}), nil

	// TODO: Uncomment the next line to return response Response(400, {}) or use other options such as http.Ok ...
	// return Response(400, nil),nil

	// TODO: Uncomment the next line to return response Response(404, {}) or use other options such as http.Ok ...
	// return Response(404, nil),nil

	return Response(http.StatusNotImplemented, nil), errors.New("GetPermissionByUUID method not implemented")
}

// ChangePermissionByUUUID - change permission by uuid
func (s *PermissionsAPIService) ChangePermissionByUUUID(ctx context.Context, uuid string, permission Permission) (ImplResponse, error) {
	// TODO - update ChangePermissionByUUUID with the required logic for this service method.
	// Add api_permissions_service.go to the .openapi-generator-ignore to avoid overwriting this service implementation when updating open api generation.

	// TODO: Uncomment the next line to return response Response(200, Permission{}) or use other options such as http.Ok ...
	// return Response(200, Permission{}), nil

	// TODO: Uncomment the next line to return response Response(400, {}) or use other options such as http.Ok ...
	// return Response(400, nil),nil

	// TODO: Uncomment the next line to return response Response(404, {}) or use other options such as http.Ok ...
	// return Response(404, nil),nil

	return Response(http.StatusNotImplemented, nil), errors.New("ChangePermissionByUUUID method not implemented")
}

// DeletePermissionByUUUID - delete permission by uuid
func (s *PermissionsAPIService) DeletePermissionByUUUID(ctx context.Context, uuid string) (ImplResponse, error) {
	// TODO - update DeletePermissionByUUUID with the required logic for this service method.
	// Add api_permissions_service.go to the .openapi-generator-ignore to avoid overwriting this service implementation when updating open api generation.

	// TODO: Uncomment the next line to return response Response(200, {}) or use other options such as http.Ok ...
	// return Response(200, nil),nil

	// TODO: Uncomment the next line to return response Response(400, {}) or use other options such as http.Ok ...
	// return Response(400, nil),nil

	// TODO: Uncomment the next line to return response Response(404, {}) or use other options such as http.Ok ...
	// return Response(404, nil),nil

	return Response(http.StatusNotImplemented, nil), errors.New("DeletePermissionByUUUID method not implemented")
}
