// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

/*
 * user_authorization service - OpenAPI 3.0
 *
 * Сервис авторизации пользователей
 *
 * API version: 1.0.0
 */

package openapi

type Person struct {
	Uuid string `json:"uuid,omitempty"`

	FirstName string `json:"first_name"`

	MiddleName string `json:"middle_name"`

	LastName string `json:"last_name"`

	Email string `json:"email"`

	Address string `json:"address"`

	Age int32 `json:"age"`

	Gender string `json:"gender"`

	DateOfBirth string `json:"date_of_birth"`
}

// AssertPersonRequired checks if the required fields are not zero-ed
func AssertPersonRequired(obj Person) error {
	elements := map[string]interface{}{
		"first_name":    obj.FirstName,
		"middle_name":   obj.MiddleName,
		"last_name":     obj.LastName,
		"email":         obj.Email,
		"address":       obj.Address,
		"age":           obj.Age,
		"gender":        obj.Gender,
		"date_of_birth": obj.DateOfBirth,
	}
	for name, el := range elements {
		if isZero := IsZeroValue(el); isZero {
			return &RequiredError{Field: name}
		}
	}

	return nil
}

// AssertPersonConstraints checks if the values respects the defined constraints
func AssertPersonConstraints(obj Person) error {
	return nil
}
