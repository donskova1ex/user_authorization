// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

/*
 * user_authorization service - OpenAPI 3.0
 *
 * Сервис авторизации пользователей
 *
 * API version: 1.0.0
 */

package openapi

import (
	"context"
	"errors"
	"net/http"
)

// RolesAPIService is a service that implements the logic for the RolesAPIServicer
// This service should implement the business logic for every endpoint for the RolesAPI API.
// Include any external packages or services that will be required by this service.
type RolesAPIService struct {
}

// NewRolesAPIService creates a default api service
func NewRolesAPIService() *RolesAPIService {
	return &RolesAPIService{}
}

// RolesList - Roles list
func (s *RolesAPIService) RolesList(ctx context.Context) (ImplResponse, error) {
	// TODO - update RolesList with the required logic for this service method.
	// Add api_roles_service.go to the .openapi-generator-ignore to avoid overwriting this service implementation when updating open api generation.

	// TODO: Uncomment the next line to return response Response(200, []Role{}) or use other options such as http.Ok ...
	// return Response(200, []Role{}), nil

	// TODO: Uncomment the next line to return response Response(204, {}) or use other options such as http.Ok ...
	// return Response(204, nil),nil

	return Response(http.StatusNotImplemented, nil), errors.New("RolesList method not implemented")
}

// GetRoleByUUID - Find role by uuid
func (s *RolesAPIService) GetRoleByUUID(ctx context.Context, uuid string) (ImplResponse, error) {
	// TODO - update GetRoleByUUID with the required logic for this service method.
	// Add api_roles_service.go to the .openapi-generator-ignore to avoid overwriting this service implementation when updating open api generation.

	// TODO: Uncomment the next line to return response Response(200, Role{}) or use other options such as http.Ok ...
	// return Response(200, Role{}), nil

	// TODO: Uncomment the next line to return response Response(400, {}) or use other options such as http.Ok ...
	// return Response(400, nil),nil

	// TODO: Uncomment the next line to return response Response(404, {}) or use other options such as http.Ok ...
	// return Response(404, nil),nil

	return Response(http.StatusNotImplemented, nil), errors.New("GetRoleByUUID method not implemented")
}

// ChangeRoleByUUUID - change role by uuid
func (s *RolesAPIService) ChangeRoleByUUUID(ctx context.Context, uuid string, role Role) (ImplResponse, error) {
	// TODO - update ChangeRoleByUUUID with the required logic for this service method.
	// Add api_roles_service.go to the .openapi-generator-ignore to avoid overwriting this service implementation when updating open api generation.

	// TODO: Uncomment the next line to return response Response(200, Role{}) or use other options such as http.Ok ...
	// return Response(200, Role{}), nil

	// TODO: Uncomment the next line to return response Response(400, {}) or use other options such as http.Ok ...
	// return Response(400, nil),nil

	// TODO: Uncomment the next line to return response Response(404, {}) or use other options such as http.Ok ...
	// return Response(404, nil),nil

	return Response(http.StatusNotImplemented, nil), errors.New("ChangeRoleByUUUID method not implemented")
}

// DeleteRoleByUUUID - delete role by uuid
func (s *RolesAPIService) DeleteRoleByUUUID(ctx context.Context, uuid string) (ImplResponse, error) {
	// TODO - update DeleteRoleByUUUID with the required logic for this service method.
	// Add api_roles_service.go to the .openapi-generator-ignore to avoid overwriting this service implementation when updating open api generation.

	// TODO: Uncomment the next line to return response Response(200, {}) or use other options such as http.Ok ...
	// return Response(200, nil),nil

	// TODO: Uncomment the next line to return response Response(400, {}) or use other options such as http.Ok ...
	// return Response(400, nil),nil

	// TODO: Uncomment the next line to return response Response(404, {}) or use other options such as http.Ok ...
	// return Response(404, nil),nil

	return Response(http.StatusNotImplemented, nil), errors.New("DeleteRoleByUUUID method not implemented")
}
