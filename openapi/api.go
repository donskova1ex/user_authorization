// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

/*
 * user_authorization service - OpenAPI 3.0
 *
 * Сервис авторизации пользователей
 *
 * API version: 1.0.0
 */

package openapi

import (
	"context"
	"net/http"
)

// PermissionsAPIRouter defines the required methods for binding the api requests to a responses for the PermissionsAPI
// The PermissionsAPIRouter implementation should parse necessary information from the http request,
// pass the data to a PermissionsAPIServicer to perform the required actions, then write the service results to the http response.
type PermissionsAPIRouter interface {
	PermissionsList(http.ResponseWriter, *http.Request)
	GetPermissionByUUID(http.ResponseWriter, *http.Request)
	ChangePermissionByUUUID(http.ResponseWriter, *http.Request)
	DeletePermissionByUUUID(http.ResponseWriter, *http.Request)
}

// PersonsAPIRouter defines the required methods for binding the api requests to a responses for the PersonsAPI
// The PersonsAPIRouter implementation should parse necessary information from the http request,
// pass the data to a PersonsAPIServicer to perform the required actions, then write the service results to the http response.
type PersonsAPIRouter interface {
	PersonsList(http.ResponseWriter, *http.Request)
	GetPersonByUUID(http.ResponseWriter, *http.Request)
	ChangePersonByUUUID(http.ResponseWriter, *http.Request)
	DeletePersonByUUUID(http.ResponseWriter, *http.Request)
}

// RolesAPIRouter defines the required methods for binding the api requests to a responses for the RolesAPI
// The RolesAPIRouter implementation should parse necessary information from the http request,
// pass the data to a RolesAPIServicer to perform the required actions, then write the service results to the http response.
type RolesAPIRouter interface {
	RolesList(http.ResponseWriter, *http.Request)
	GetRoleByUUID(http.ResponseWriter, *http.Request)
	ChangeRoleByUUUID(http.ResponseWriter, *http.Request)
	DeleteRoleByUUUID(http.ResponseWriter, *http.Request)
}

// UsersAPIRouter defines the required methods for binding the api requests to a responses for the UsersAPI
// The UsersAPIRouter implementation should parse necessary information from the http request,
// pass the data to a UsersAPIServicer to perform the required actions, then write the service results to the http response.
type UsersAPIRouter interface {
	UsersList(http.ResponseWriter, *http.Request)
	GetUserByUUID(http.ResponseWriter, *http.Request)
	ChangeUserByUUUID(http.ResponseWriter, *http.Request)
	DeleteUserByUUUID(http.ResponseWriter, *http.Request)
}

// PermissionsAPIServicer defines the api actions for the PermissionsAPI service
// This interface intended to stay up to date with the openapi yaml used to generate it,
// while the service implementation can be ignored with the .openapi-generator-ignore file
// and updated with the logic required for the API.
type PermissionsAPIServicer interface {
	PermissionsList(context.Context) (ImplResponse, error)
	GetPermissionByUUID(context.Context, string) (ImplResponse, error)
	ChangePermissionByUUUID(context.Context, string, Permission) (ImplResponse, error)
	DeletePermissionByUUUID(context.Context, string) (ImplResponse, error)
}

// PersonsAPIServicer defines the api actions for the PersonsAPI service
// This interface intended to stay up to date with the openapi yaml used to generate it,
// while the service implementation can be ignored with the .openapi-generator-ignore file
// and updated with the logic required for the API.
type PersonsAPIServicer interface {
	PersonsList(context.Context) (ImplResponse, error)
	GetPersonByUUID(context.Context, string) (ImplResponse, error)
	ChangePersonByUUUID(context.Context, string, Person) (ImplResponse, error)
	DeletePersonByUUUID(context.Context, string) (ImplResponse, error)
}

// RolesAPIServicer defines the api actions for the RolesAPI service
// This interface intended to stay up to date with the openapi yaml used to generate it,
// while the service implementation can be ignored with the .openapi-generator-ignore file
// and updated with the logic required for the API.
type RolesAPIServicer interface {
	RolesList(context.Context) (ImplResponse, error)
	GetRoleByUUID(context.Context, string) (ImplResponse, error)
	ChangeRoleByUUUID(context.Context, string, Role) (ImplResponse, error)
	DeleteRoleByUUUID(context.Context, string) (ImplResponse, error)
}

// UsersAPIServicer defines the api actions for the UsersAPI service
// This interface intended to stay up to date with the openapi yaml used to generate it,
// while the service implementation can be ignored with the .openapi-generator-ignore file
// and updated with the logic required for the API.
type UsersAPIServicer interface {
	UsersList(context.Context) (ImplResponse, error)
	GetUserByUUID(context.Context, string) (ImplResponse, error)
	ChangeUserByUUUID(context.Context, string, User) (ImplResponse, error)
	DeleteUserByUUUID(context.Context, string) (ImplResponse, error)
}
