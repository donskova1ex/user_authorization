version: "3.9"
services:
  postgres:
    container_name: user_authorization.postgres
    image: postgres:15
    hostname: postgres
    environment:
      - POSTGRES_DB=${POSTGRES_DB}
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_HOST=${POSTGRES_HOST}
      - POSTGRES_PORT=${POSTGRES_PORT}
      - POSTGRES_SSL_MODE=${POSTGRES_SSL_MODE}
    ports:
      - 5432:5432
    volumes:
      - .:/docker-entrypoint-initdb.d
    healthcheck:
      test: ["CMD-SHELL", "sh -c 'pg_isready -U dev -d dev'"]
      interval: 10s
      timeout: 60s
      retries: 5
      start_period: 30s
  migrations-up:
    container_name: user_authorization.migrations-up
    environment:
      - GOOSE_DRIVER=${GOOSE_DRIVER}
      - GOOSE_DBSTRING=${GOOSE_DBSTRING}
    build:
      context: .
      dockerfile: Dockerfile.migrations
    command: ["goose", "-dir", "migrations", "up"]
    depends_on:
      postgres:
        condition: service_healthy
  migrations-down:
    container_name: user_authorization.migrations-down
    environment:
      - GOOSE_DRIVER=${GOOSE_DRIVER}
      - GOOSE_DBSTRING=${GOOSE_DBSTRING}
    build:
      context: .
      dockerfile: Dockerfile.migrations
    command: ["goose", "-dir", "migrations", "reset"]
    profiles:
      - migrations-down
    depends_on:
      postgres:
        condition: service_healthy
